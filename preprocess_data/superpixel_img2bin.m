clear;

raw_rgb_folder = 'raw_imgs/image_2/';
sp_ind_folder='superpixel_ind/';  % superpixel index image generated by SLIC. each pixel represents corresponding superpixel index
sp_bin_folder='superpixel_bin/';  % save as binary file

max_sp_num = 170;
col_num = 2077;

all_name_imgs=dir([sp_ind_folder '*.png']);

for img_counter=1:size(all_name_imgs)   
    fprintf('processing %d\n',img_counter);
    filename = [sp_ind_folder all_name_imgs(img_counter).name];
    im = imread(filename);
%     size(im)
    sp_mat = ones([max_sp_num, col_num]) * 10000;  % initialize as a large number

    sp_mat(:,1) = 0;

    [m,n] = size(im);

    for i = 1 : m
        curclass = -1;
        for j = 1 : n
            if curclass == -1
                curclass = im(i, j);
                startind = j;
            elseif curclass ~= im(i, j)
                c = curclass + 1;
                next_ind = sp_mat(c, 1) + 1;
                sp_mat(c, next_ind + 1) = i-1;
                sp_mat(c, next_ind + 2) = startind-1;
                sp_mat(c, next_ind + 3) = j-2;

                sp_mat(c, 1) = sp_mat(c, 1) + 3;
                curclass = im(i, j);
                startind = j;
            end
        end
        c = curclass + 1;
        next_ind = sp_mat(c, 1) + 1;
        sp_mat(c, next_ind + 1) = i-1;
        sp_mat(c, next_ind + 2) = startind-1;
        sp_mat(c, next_ind + 3) = j-1;

        sp_mat(c, 1) = sp_mat(c, 1) + 3;
    end
    
    
    binname = [sp_bin_folder sprintf('%06d',img_counter-1) '.bin'];    
    dist3 = uint16(sp_mat);
    fileID = fopen(binname,'w');
    fwrite(fileID,dist3','uint16');  % matlab saves data column by column, so need to transpose here
    fclose(fileID);            
end





%% visualize and check binary file
visualize = true;
for img_counter=1:size(all_name_imgs)
    frame_char = sprintf('%06d',img_counter-1);
    rgb_img=imread([raw_rgb_folder frame_char '.png']);
    sp_bin_name=[sp_bin_folder frame_char '.bin'];
    
    % read superpixel binary file. each row represents one superpixel, and its containing pixel location.
    % in more detail: [ num of triples*3, [row1, start_col1, end_col1],[row2, start_col2, end_col2]... ]
    
    fileID2 = fopen(sp_bin_name);
    frame_sps = fread(fileID2,'uint16');
    frame_sp_mat=reshape(frame_sps,col_num,max_sp_num)';

    im_height = size(rgb_img,1);im_width = size(rgb_img,2);
    sp_index_img=zeros(im_height,im_width);  % output superpixel index image. same size as raw image. representing each pixel's superpixel index    
    
    for i=1:max_sp_num
        sp_row_num=frame_sp_mat(i,1)/3;
        for j=1:sp_row_num
            indRow =  frame_sp_mat(i,(j-1)*3+2)+1;
            indStart = frame_sp_mat(i,(j-1)*3+3)+1;
            indEnd =  frame_sp_mat(i,(j-1)*3+4)+1;
            for ii=indStart:indEnd
                sp_index_img(indRow+1,ii)=i;
            end
        end
    end
    if (visualize)
        figure(1);    imagesc(sp_index_img)
    end
    
    boundary_img=zeros(im_height,im_width);
    
    for y=2:im_height-1
        for x=2:im_width-1
            for yy=y-1:y+1
                for xx=x-1:x+1
                    if (sp_index_img(yy,xx)~=sp_index_img(y,x))
                        boundary_img(y,x)=1;
                    end
                end
            end
        end
    end
    if (visualize)    
        figure(2);    imshow(boundary_img==1)
    end
    
    blended_img=rgb_img;
    for y=2:im_height-1
        for x=2:im_width-1
            if (boundary_img(y,x)==1)
                blended_img(y,x,:)=[255,0,0];
            end
        end
    end
    if (visualize)
        figure(3);    imshow(blended_img)  % should be same as superpixel_img
        pause();
    end    
end